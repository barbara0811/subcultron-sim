<launch>
  <!-- The configuration assumes direct connection to ublox GPS and Spatial -->
  <!-- GPS: NOVATEL, UBLOX, SPATIAL on a Multiplexer Switch, IMU: spatial, DVL: none -->
  <!-- Namespace: none -->

  <!-- Arguments -->
  
  <arg name="logging" default="$(optenv LOGGING false)" />

<node
        pkg="uwsim" 
        name="uwsim" 
        type="uwsim" 
        args="--configfile $(find amussel)/data/simulation/swarm_test.xml  
  		--dataPath  $(find amussel)/data/simulation/"/>


  
  <group ns="amussel1">  
  
 
  <!-- Load parameters -->
  <rosparam file="$(find amussel)/data/navigation/params/nav_standard.yaml"/>
  <rosparam file="$(find amussel)/data/control/params/controllers_standard.yaml"/>
  <rosparam file="$(find amussel)/data/dynamics/amussel1.yaml" />
  
  
  <!-- Location parameters -->
  <rosparam command="load" file="$(find amussel)/data/locations/swarm_loc.yaml" />
  
  <!-- Static TF -->
  <include file="$(find amussel)/data/devices/static_frames.xml"/>
  
  <!-- Load the simulation -->
  <include file="$(find amussel)/data/simulation/simulation_standard.xml"/>

  <!-- Load the navigation 
  <include file="$(find amussel)/data/navigation/navigation_standard.xml"/>-->
  
  <!-- Load the controllers -->
  <include file="$(find amussel)/data/control/control_standard.xml"/>
  
  <!-- Load the primitives -->
  <include file="$(find amussel)/data/primitives/primitives_standard.xml"/>
  
   <!-- Load visualization -->
  <include file="$(find amussel)/data/simulation/visualization_standard.xml">
  <arg name="hook_sel" value="amussel1/uwsim_hook" />
  </include>

  <node pkg="amussel" type="scenario_controller.py" name="scenario_controller"> </node>
  <node pkg="amussel" type="action_server.py" name="action_server"> </node>

  </group>	


<group ns="amussel2">  
  
 
  <!-- Load parameters -->
  <rosparam file="$(find amussel)/data/navigation/params/nav_standard.yaml"/>
  <rosparam file="$(find amussel)/data/control/params/controllers_standard.yaml"/>
  <rosparam file="$(find amussel)/data/dynamics/amussel2.yaml" />
  
  
  <!-- Location parameters -->
  <rosparam command="load" file="$(find amussel)/data/locations/swarm_loc.yaml" />
  
  <!-- Static TF -->
  <include file="$(find amussel)/data/devices/static_frames.xml"/>
  
  <!-- Load the simulation -->
  <include file="$(find amussel)/data/simulation/simulation_standard.xml"/>

  <!-- Load the navigation 
  <include file="$(find amussel)/data/navigation/navigation_standard.xml"/>-->
  
  <!-- Load the controllers -->
  <include file="$(find amussel)/data/control/control_standard.xml"/>
  
  <!-- Load the primitives -->
  <include file="$(find amussel)/data/primitives/primitives_standard.xml"/>
  
   <!-- Load visualization -->
  <include file="$(find amussel)/data/simulation/visualization_standard.xml">
  <arg name="hook_sel" value="amussel2/uwsim_hook" />
  </include>

  <node pkg="amussel" type="scenario_controller.py" name="scenario_controller"> </node>
  <node pkg="amussel" type="action_server.py" name="action_server"> </node>
  
  </group>	



<group ns="amussel3">  
  
 
  <!-- Load parameters -->
  <rosparam file="$(find amussel)/data/navigation/params/nav_standard.yaml"/>
  <rosparam file="$(find amussel)/data/control/params/controllers_standard.yaml"/>
  <rosparam file="$(find amussel)/data/dynamics/amussel3.yaml" />
  
  
  <!-- Location parameters -->
  <rosparam command="load" file="$(find amussel)/data/locations/swarm_loc.yaml" />
  
  <!-- Static TF -->
  <include file="$(find amussel)/data/devices/static_frames.xml"/>
  
  <!-- Load the simulation -->
  <include file="$(find amussel)/data/simulation/simulation_standard.xml"/>

  <!-- Load the navigation 
  <include file="$(find amussel)/data/navigation/navigation_standard.xml"/>-->
  
  <!-- Load the controllers -->
  <include file="$(find amussel)/data/control/control_standard.xml"/>
  
  <!-- Load the primitives -->
  <include file="$(find amussel)/data/primitives/primitives_standard.xml"/>
  
   <!-- Load visualization -->
  <include file="$(find amussel)/data/simulation/visualization_standard.xml">
  <arg name="hook_sel" value="amussel3/uwsim_hook" />
  </include>

  <node pkg="amussel" type="scenario_controller.py" name="scenario_controller"> </node>
  <node pkg="amussel" type="action_server.py" name="action_server"> </node>
  
  </group>	


<group ns="amussel4">  
  
 
  <!-- Load parameters -->
  <rosparam file="$(find amussel)/data/navigation/params/nav_standard.yaml"/>
  <rosparam file="$(find amussel)/data/control/params/controllers_standard.yaml"/>
  <rosparam file="$(find amussel)/data/dynamics/amussel4.yaml" />
  
  
  <!-- Location parameters -->
  <rosparam command="load" file="$(find amussel)/data/locations/swarm_loc.yaml" />
  
  <!-- Static TF -->
  <include file="$(find amussel)/data/devices/static_frames.xml"/>
  
  <!-- Load the simulation -->
  <include file="$(find amussel)/data/simulation/simulation_standard.xml"/>

  <!-- Load the navigation 
  <include file="$(find amussel)/data/navigation/navigation_standard.xml"/>-->
  
  <!-- Load the controllers -->
  <include file="$(find amussel)/data/control/control_standard.xml"/>
  
  <!-- Load the primitives -->
  <include file="$(find amussel)/data/primitives/primitives_standard.xml"/>
  
   <!-- Load visualization -->
  <include file="$(find amussel)/data/simulation/visualization_standard.xml">
  <arg name="hook_sel" value="amussel4/uwsim_hook" />
  </include>

  <node pkg="amussel" type="scenario_controller.py" name="scenario_controller"> </node>
  <node pkg="amussel" type="action_server.py" name="action_server"> </node>
  
  </group>	


<group ns="amussel5">  
  
 
  <!-- Load parameters -->
  <rosparam file="$(find amussel)/data/navigation/params/nav_standard.yaml"/>
  <rosparam file="$(find amussel)/data/control/params/controllers_standard.yaml"/>
  <rosparam file="$(find amussel)/data/dynamics/amussel5.yaml" />
  
  
  <!-- Location parameters -->
  <rosparam command="load" file="$(find amussel)/data/locations/swarm_loc.yaml" />
  
  <!-- Static TF -->
  <include file="$(find amussel)/data/devices/static_frames.xml"/>
  
  <!-- Load the simulation -->
  <include file="$(find amussel)/data/simulation/simulation_standard.xml"/>

  <!-- Load the navigation 
  <include file="$(find amussel)/data/navigation/navigation_standard.xml"/>-->
  
  <!-- Load the controllers -->
  <include file="$(find amussel)/data/control/control_standard.xml"/>
  
  <!-- Load the primitives -->
  <include file="$(find amussel)/data/primitives/primitives_standard.xml"/>
  
   <!-- Load visualization -->
  <include file="$(find amussel)/data/simulation/visualization_standard.xml">
  <arg name="hook_sel" value="amussel5/uwsim_hook" />
  </include>

  <node pkg="amussel" type="scenario_controller.py" name="scenario_controller"> </node>
  <node pkg="amussel" type="action_server.py" name="action_server"> </node>
  
  </group>	





  <!-- Start logger -->
  <node pkg="rosbag" type="record" name="logger" args="-a -x '(.*)/camera(.*)|(.*)/sonar/(.*)|(.*)/soundmetrics_aris3000/(.*)' -o /home/stdops/logs/bags/amussel" if="$(arg logging)" />

  <!-- Load multi-master with full sync -->
  <!--<node pkg="master_discovery_fkie" type="zeroconf" name="zeroconf" />
  <node pkg="master_sync_fkie" type="master_sync" name="master_sync" >-->
    <!-- <param name="interface_url" value="$(find amussel)/data/multi_master/pladypos_basic.sync" /> -->
  <!--</node>-->
</launch>
